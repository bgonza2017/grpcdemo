// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpcdemo.proto

/*
Package grpcdemo is a generated protocol buffer package.

It is generated from these files:
	grpcdemo.proto

It has these top-level messages:
	JoinRequest
	JoinReply
*/
package grpcdemo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
// if name is empty, join as lurker/anonymous.
type JoinRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *JoinRequest) Reset()                    { *m = JoinRequest{} }
func (m *JoinRequest) String() string            { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()               {}
func (*JoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *JoinRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the message reply
type JoinReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *JoinReply) Reset()                    { *m = JoinReply{} }
func (m *JoinReply) String() string            { return proto.CompactTextString(m) }
func (*JoinReply) ProtoMessage()               {}
func (*JoinReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *JoinReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*JoinRequest)(nil), "grpcdemo.JoinRequest")
	proto.RegisterType((*JoinReply)(nil), "grpcdemo.JoinReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Lobby service

type LobbyClient interface {
	// Join lobby
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinReply, error)
}

type lobbyClient struct {
	cc *grpc.ClientConn
}

func NewLobbyClient(cc *grpc.ClientConn) LobbyClient {
	return &lobbyClient{cc}
}

func (c *lobbyClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinReply, error) {
	out := new(JoinReply)
	err := grpc.Invoke(ctx, "/grpcdemo.Lobby/Join", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Lobby service

type LobbyServer interface {
	// Join lobby
	Join(context.Context, *JoinRequest) (*JoinReply, error)
}

func RegisterLobbyServer(s *grpc.Server, srv LobbyServer) {
	s.RegisterService(&_Lobby_serviceDesc, srv)
}

func _Lobby_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcdemo.Lobby/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lobby_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcdemo.Lobby",
	HandlerType: (*LobbyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _Lobby_Join_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpcdemo.proto",
}

func init() { proto.RegisterFile("grpcdemo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x2f, 0x2a, 0x48,
	0x4e, 0x49, 0xcd, 0xcd, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x14,
	0xb9, 0xb8, 0xbd, 0xf2, 0x33, 0xf3, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8,
	0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x55,
	0x2e, 0x4e, 0x88, 0x92, 0x82, 0x9c, 0x4a, 0x21, 0x09, 0x2e, 0xf6, 0xdc, 0xd4, 0xe2, 0xe2, 0xc4,
	0x74, 0x98, 0x1a, 0x18, 0xd7, 0xc8, 0x96, 0x8b, 0xd5, 0x27, 0x3f, 0x29, 0xa9, 0x52, 0xc8, 0x84,
	0x8b, 0x05, 0xa4, 0x5e, 0x48, 0x54, 0x0f, 0x6e, 0x2b, 0x92, 0x15, 0x52, 0xc2, 0xe8, 0xc2, 0x05,
	0x39, 0x95, 0x4a, 0x0c, 0x4e, 0x72, 0x5c, 0x02, 0x99, 0xf9, 0x60, 0x29, 0xb8, 0xbc, 0x13, 0x87,
	0x7b, 0x51, 0x41, 0xb2, 0x4b, 0x6a, 0x6e, 0x7e, 0x00, 0x63, 0x12, 0x1b, 0xd8, 0xe5, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x88, 0xd2, 0x8e, 0xcb, 0x00, 0x00, 0x00,
}
